# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - python-oryx-hiyosh

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: python-oryx-hiyosh    # set this to your application's name
  WORKING_DIRECTORY: '/'        # set this to the path to your path of working directory inside github repository, defaults to the repository root
  PYTHON_VERSION: '3.12'        # set the version to use
  STARTUP_COMMAND: ''           # set this to the startup command required to start the gunicorn server. default it is empty

jobs:
 build-and-deploy:
  runs-on: ubuntu-latest
  environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  permissions:
      id-token: write #This is required for requesting the JWT
      
  steps:
  # checkout the repo 
  - uses: actions/checkout@v4
  
  # setup python
  - name: Setup Python
    uses: actions/setup-python@v5
    with:
     python-version: ${{ env.PYTHON_VERSION }}
     
  # install dependencies
  - name: python install
    working-directory: ${{ env.WORKING_DIRECTORY }}
    run: |
     python -m venv --copies antenv
     source antenv/bin/activate
     pip install setuptools
     pip install -r requirements.txt
     
  # Azure login
  - name: Azure Login
    uses: azure/login@v2
    with:
        client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_42BFE75225644E24ABC0A549BDDADC81 }}
        tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0E339EB4F2E94E22B2F518449E7F4A2E }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A085EF165D68453CAB03205AF6BDCC18 }}
     
  # deploy web app
  - name: Deploy
    uses: azure/webapps-deploy@v3
    with:
     app-name: ${{ env.AZURE_WEBAPP_NAME }}
     package: ${{ env.WORKING_DIRECTORY }}
     startup-command: ${{ env.STARTUP_COMMAND }}

  # Azure logout
  - name: logout
    run: |
     az logout
